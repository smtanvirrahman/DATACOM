{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;\red255\green255\blue255;\red200\green200\blue200;\red0\green0\blue0;\red160\green160\blue160;\red190\green190\blue230;\red128\green128\blue255;\red0\green128\blue128;\red128\green0\blue0;\red240\green0\blue240;\red240\green200\blue240;\red0\green0\blue160;\red135\green135\blue200;\red0\green160\blue0;\red154\green200\blue154;\red190\green0\blue190;\red190\green137\blue190;\red0\green0\blue255;\red190\green190\blue255;\red224\green160\blue0;\red224\green206\blue159;\red132\green160\blue132;\red255\green0\blue0;\red255\green200\blue200;\red128\green255\blue255;\red64\green64\blue128;\red133\green133\blue172;}
{\info{\comment Generated by the Code::Blocks RTF Exporter plugin}
{\title Untitled}}

\deflang1033\pard\plain\f0\fs16   1  \cb3\cf5 //1 0 0 1 1 0 1
\par \cb1\cf0\ul0\i0\b0   2  \cb3\cf13 #include<stdio.h>
\par \cb1\cf0\ul0\i0\b0   3  \cb3\cf13 #include<stdlib.h> \cb3\cf5 // to use system()
\par \cb1\cf0\ul0\i0\b0   4  \cb3\cf13 #include<math.h> \cb3\cf5 // to use pow()
\par \cb1\cf0\ul0\i0\b0   5  \cb3\cf13 #include<string.h>
\par \cb1\cf0\ul0\i0\b0   6  \cb3\cf11\b void \b0\cb1\cf0 main\cb3\cf22 ()
\par \cb1\cf0\ul0\i0\b0   7  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0   8      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "                                        "\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0   9      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "<<< WELCOME TO THE ERROR CHECKING SYSTEM >>> \\n\\n\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  10      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "                                 "\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  11      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "This  program is an implementation of the 'Hammming Code'\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  12      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n This program can try on different data block size\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  13      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n Maximum redundant bit capability is: 4 bits"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  14      \cb1\cf0 options\cb3\cf22 ();
\par \cb1\cf0\ul0\i0\b0  15          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "                                            "\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  16      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "<<< THANK YOU FOR TRYING THIS >>> \\n\\n\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  17      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "                                            "\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  18      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n\\n For any suggestion mail me>>> tanvir.181002196@green.ac.bd\\n\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  19      \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  20  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  21  
\par \cb1\cf0\ul0\i0\b0  22  \cb1\cf0 options\cb3\cf22 ()
\par \cb1\cf0\ul0\i0\b0  23  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  24      \cb3\cf11\b int \b0\cb1\cf0 op\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  25      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n\\n\\nPlease Select a Option from the following items:\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  26      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n 1: Hamming code Sender Part\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  27      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n 2: Hamming Distance\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  28      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nEnter Selection(1/2)?: "\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  29      \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d"\cb3\cf22 ,&\cb1\cf0 op\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  30      \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 op\cb3\cf22 ==\cb3\cf9 1\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  31          \cb1\cf0 hamcs\cb3\cf22 ();\cb3\cf5 //hamming code sender part
\par \cb1\cf0\ul0\i0\b0  32      \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 op\cb3\cf22 ==\cb3\cf9 2\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  33          \cb1\cf0 hamd\cb3\cf22 (); \cb3\cf5 // hamming distance
\par \cb1\cf0\ul0\i0\b0  34  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  35  
\par \cb1\cf0\ul0\i0\b0  36  \cb3\cf11\b void \b0\cb1\cf0 hamcs\cb3\cf22 ()
\par \cb1\cf0\ul0\i0\b0  37  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  38      \cb3\cf11\b int \b0\cb1\cf0 i\cb3\cf22 ,\cb1\cf0 j\cb3\cf22 ,\cb1\cf0 k\cb3\cf22 ,\cb1\cf0 m\cb3\cf22 ,\cb1\cf0 r\cb3\cf22 ,\cb1\cf0 count\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  39      \cb3\cf11\b int \b0\cb1\cf0 data\cb3\cf22 [\cb3\cf9 20\cb3\cf22 ], \cb1\cf0 trans\cb3\cf22 [\cb3\cf9 20\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0  40      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n\\nSender Part:\\n\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  41      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nDO you want to read Hamming Code help File"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  42      \cb1\cf0 help\cb3\cf22 (\cb3\cf9 1\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  43      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n\\nEnter the number of bits in data block: "\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  44      \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d"\cb3\cf22 ,&\cb1\cf0 m\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  45      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n Enter the data bits:\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  46      \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 <\cb1\cf0 m\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0  47          \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d"\cb3\cf22 ,&\cb1\cf0 data\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]);
\par \cb1\cf0\ul0\i0\b0  48      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n Entered data bits are:\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  49      \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 <\cb1\cf0 m\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0  50          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "%d  "\cb3\cf22 ,\cb1\cf0 data\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]);
\par \cb1\cf0\ul0\i0\b0  51      \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 r\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ; \cb1\cf0 r\cb3\cf22 >=\cb3\cf9 0\cb3\cf22 ; \cb1\cf0 r\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0  52      \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  53          \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 pow\cb3\cf22 (\cb3\cf9 2\cb3\cf22 ,\cb1\cf0 r\cb3\cf22 )>=(\cb1\cf0 m\cb3\cf22 +\cb1\cf0 r\cb3\cf22 +\cb3\cf9 1\cb3\cf22 ))
\par \cb1\cf0\ul0\i0\b0  54              \cb3\cf11\b break\b0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  55      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  56      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n\\nThe total number of required redundant bit is: %d"\cb3\cf22 ,\cb1\cf0 r\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  57      \cb3\cf11\b int \b0\cb1\cf0 rbit\cb3\cf22 [\cb1\cf0 r\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0  58      \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ,\cb1\cf0 j\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ,\cb1\cf0 k\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ; \cb1\cf0 j\cb3\cf22 <\cb1\cf0 m\cb3\cf22 +\cb1\cf0 r\cb3\cf22 ;)
\par \cb1\cf0\ul0\i0\b0  59      \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  60          \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 j\cb3\cf22 ==(\cb1\cf0 pow\cb3\cf22 (\cb3\cf9 2\cb3\cf22 ,\cb1\cf0 i\cb3\cf22 )-\cb3\cf9 1\cb3\cf22 ))
\par \cb1\cf0\ul0\i0\b0  61          \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  62              \cb1\cf0 trans\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]=\cb3\cf9 9\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  63             \cb1\cf0 i\cb3\cf22 ++; \cb1\cf0 j\cb3\cf22 ++;
\par \cb1\cf0\ul0\i0\b0  64          \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  65          \cb3\cf11\b else
\par \cb1\cf0\ul0\i0\b0  66          \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  67              \cb1\cf0 trans\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]=\cb1\cf0 data\cb3\cf22 [\cb1\cf0 k\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0  68              \cb1\cf0 k\cb3\cf22 ++; \cb1\cf0 j\cb3\cf22 ++;
\par \cb1\cf0\ul0\i0\b0  69          \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  70      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  71      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n\\nTransmission test:\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  72     \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 <\cb1\cf0 m\cb3\cf22 +\cb1\cf0 r\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0  73          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "%d  "\cb3\cf22 ,\cb1\cf0 trans\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]);
\par \cb1\cf0\ul0\i0\b0  74  
\par \cb1\cf0\ul0\i0\b0  75   \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  76       \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 k\cb3\cf22 =\cb3\cf9 2\cb3\cf22 ;\cb1\cf0 k\cb3\cf22 <\cb1\cf0 m\cb3\cf22 +\cb1\cf0 r\cb3\cf22 ; \cb1\cf0 k\cb3\cf22 =\cb1\cf0 k\cb3\cf22 +\cb3\cf9 2\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  77       \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  78           \cb1\cf0 count\cb3\cf22 =\cb1\cf0 count\cb3\cf22 +\cb1\cf0 trans\cb3\cf22 [\cb1\cf0 k\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0  79           \cb3\cf5 //printf("count : %d",count);
\par \cb1\cf0\ul0\i0\b0  80       \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  81       \cb1\cf0 j\cb3\cf22 =(\cb1\cf0 pow\cb3\cf22 (\cb3\cf9 2\cb3\cf22 ,\cb3\cf9 0\cb3\cf22 )-\cb3\cf9 1\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  82       \cb3\cf5 //printf("count : %d",count);
\par \cb1\cf0\ul0\i0\b0  83       \cb1\cf0 trans\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]= \cb1\cf0 count\cb3\cf22 %\cb3\cf9 2\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  84   \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  85  
\par \cb1\cf0\ul0\i0\b0  86    \cb3\cf22 \{ \cb1\cf0 count\cb3\cf22 =\cb1\cf0 trans\cb3\cf22 [\cb3\cf9 2\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0  87       \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 k\cb3\cf22 =\cb3\cf9 5\cb3\cf22 ;\cb1\cf0 k\cb3\cf22 <\cb1\cf0 m\cb3\cf22 +\cb1\cf0 r\cb3\cf22 ; \cb1\cf0 k\cb3\cf22 =\cb1\cf0 k\cb3\cf22 +\cb3\cf9 3\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  88       \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  89           \cb1\cf0 count\cb3\cf22 =\cb1\cf0 count\cb3\cf22 +\cb1\cf0 trans\cb3\cf22 [\cb1\cf0 k\cb3\cf22 ]+\cb1\cf0 trans\cb3\cf22 [\cb1\cf0 k\cb3\cf22 +\cb3\cf9 1\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0  90           \cb3\cf5 //printf("count : %d",count);
\par \cb1\cf0\ul0\i0\b0  91       \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  92       \cb1\cf0 j\cb3\cf22 =(\cb1\cf0 pow\cb3\cf22 (\cb3\cf9 2\cb3\cf22 ,\cb3\cf9 1\cb3\cf22 )-\cb3\cf9 1\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  93       \cb3\cf5 //printf("count : %d",count);
\par \cb1\cf0\ul0\i0\b0  94       \cb1\cf0 trans\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]= \cb1\cf0 count\cb3\cf22 %\cb3\cf9 2\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  95   \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  96  
\par \cb1\cf0\ul0\i0\b0  97    \cb3\cf22 \{ \cb1\cf0 count\cb3\cf22 =\cb1\cf0 trans\cb3\cf22 [\cb3\cf9 4\cb3\cf22 ]+\cb1\cf0 trans\cb3\cf22 [\cb3\cf9 5\cb3\cf22 ]+\cb1\cf0 trans\cb3\cf22 [\cb3\cf9 6\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0  98       \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 k\cb3\cf22 =\cb3\cf9 11\cb3\cf22 ;\cb1\cf0 k\cb3\cf22 <\cb1\cf0 m\cb3\cf22 +\cb1\cf0 r\cb3\cf22 ; \cb1\cf0 k\cb3\cf22 =\cb1\cf0 k\cb3\cf22 +\cb3\cf9 5\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  99       \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 100           \cb1\cf0 count\cb3\cf22 =\cb1\cf0 count\cb3\cf22 +\cb1\cf0 trans\cb3\cf22 [\cb1\cf0 k\cb3\cf22 ]+\cb1\cf0 trans\cb3\cf22 [\cb1\cf0 k\cb3\cf22 +\cb3\cf9 1\cb3\cf22 ]+\cb1\cf0 trans\cb3\cf22 [\cb1\cf0 k\cb3\cf22 +\cb3\cf9 2\cb3\cf22 ]+\cb1\cf0 trans\cb3\cf22 [\cb1\cf0 k\cb3\cf22 +\cb3\cf9 3\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0 101           \cb3\cf5 //printf("count : %d",count);
\par \cb1\cf0\ul0\i0\b0 102       \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 103       \cb1\cf0 j\cb3\cf22 =(\cb1\cf0 pow\cb3\cf22 (\cb3\cf9 2\cb3\cf22 ,\cb3\cf9 2\cb3\cf22 )-\cb3\cf9 1\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 104       \cb3\cf5 //printf("count : %d",count);
\par \cb1\cf0\ul0\i0\b0 105       \cb1\cf0 trans\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]= \cb1\cf0 count\cb3\cf22 %\cb3\cf9 2\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 106   \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 107   \cb3\cf22 \{ \cb1\cf0 count\cb3\cf22 =\cb1\cf0 trans\cb3\cf22 [\cb3\cf9 8\cb3\cf22 ]+\cb1\cf0 trans\cb3\cf22 [\cb3\cf9 9\cb3\cf22 ]+\cb1\cf0 trans\cb3\cf22 [\cb3\cf9 10\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0 108       \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 k\cb3\cf22 =\cb3\cf9 23\cb3\cf22 ;\cb1\cf0 k\cb3\cf22 <\cb1\cf0 m\cb3\cf22 +\cb1\cf0 r\cb3\cf22 ; \cb1\cf0 k\cb3\cf22 =\cb1\cf0 k\cb3\cf22 +\cb3\cf9 9\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0 109       \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 110           \cb1\cf0 count\cb3\cf22 =\cb1\cf0 count\cb3\cf22 +\cb1\cf0 trans\cb3\cf22 [\cb1\cf0 k\cb3\cf22 ]+\cb1\cf0 trans\cb3\cf22 [\cb1\cf0 k\cb3\cf22 +\cb3\cf9 1\cb3\cf22 ]+\cb1\cf0 trans\cb3\cf22 [\cb1\cf0 k\cb3\cf22 +\cb3\cf9 2\cb3\cf22 ]+\cb1\cf0 trans\cb3\cf22 [\cb1\cf0 k\cb3\cf22 +\cb3\cf9 3\cb3\cf22 ]+\cb1\cf0 trans\cb3\cf22 [\cb1\cf0 k\cb3\cf22 +\cb3\cf9 4\cb3\cf22 ]+\cb1\cf0 trans\cb3\cf22 [\cb1\cf0 k\cb3\cf22 +\cb3\cf9 5\cb3\cf22 ]+\cb1\cf0 trans\cb3\cf22 [\cb1\cf0 k\cb3\cf22 +\cb3\cf9 6\cb3\cf22 ]+\cb1\cf0 trans\cb3\cf22 [\cb1\cf0 k\cb3\cf22 +\cb3\cf9 7\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0 111           \cb3\cf5 //printf("count : %d",count);
\par \cb1\cf0\ul0\i0\b0 112       \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 113       \cb1\cf0 j\cb3\cf22 =(\cb1\cf0 pow\cb3\cf22 (\cb3\cf9 2\cb3\cf22 ,\cb3\cf9 3\cb3\cf22 )-\cb3\cf9 1\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 114       \cb3\cf5 //printf("count : %d",count);
\par \cb1\cf0\ul0\i0\b0 115       \cb1\cf0 trans\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]= \cb1\cf0 count\cb3\cf22 %\cb3\cf9 2\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 116   \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 117  
\par \cb1\cf0\ul0\i0\b0 118      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n\\nTransmission test:\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 119     \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 <\cb1\cf0 m\cb3\cf22 +\cb1\cf0 r\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0 120          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "%d  "\cb3\cf22 ,\cb1\cf0 trans\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]);
\par \cb1\cf0\ul0\i0\b0 121  
\par \cb1\cf0\ul0\i0\b0 122  \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 123  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 124      \cb3\cf11\b void \b0\cb1\cf0 hamd\cb3\cf22 ()
\par \cb1\cf0\ul0\i0\b0 125      \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 126          \cb3\cf11\b char \b0\cb1\cf0 s1\cb3\cf22 [\cb3\cf9 5\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0 127          \cb3\cf11\b int \b0\cb1\cf0 data1\cb3\cf22 [\cb3\cf9 5\cb3\cf22 ], \cb1\cf0 data2\cb3\cf22 [\cb3\cf9 5\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0 128          \cb3\cf11\b int \b0\cb1\cf0 i\cb3\cf22 ,\cb1\cf0 count\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 129          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n\\n\\nHamming Distance:(TEST PURPOSE)\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 130          \cb1\cf0 gets\cb3\cf22 (\cb1\cf0 s1\cb3\cf22 );\cb3\cf5 // to ignore the null character in the loop
\par \cb1\cf0\ul0\i0\b0 131          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nDO you want to read Hamming Distance help file"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 132          \cb1\cf0 help\cb3\cf22 (\cb3\cf9 2\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 133          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nEnter 1st string:\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 134          \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 <\cb3\cf9 5\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0 135              \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d"\cb3\cf22 ,&\cb1\cf0 data1\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]);
\par \cb1\cf0\ul0\i0\b0 136          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nEnter 2nd string:\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 137          \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 <\cb3\cf9 5\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0 138              \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d"\cb3\cf22 ,&\cb1\cf0 data2\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]);
\par \cb1\cf0\ul0\i0\b0 139          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\ninput data1:\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 140          \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 <\cb3\cf9 5\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0 141              \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "%d"\cb3\cf22 ,\cb1\cf0 data1\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]);
\par \cb1\cf0\ul0\i0\b0 142          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\ninput data2:\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 143          \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 <\cb3\cf9 5\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0 144              \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "%d"\cb3\cf22 ,\cb1\cf0 data2\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]);
\par \cb1\cf0\ul0\i0\b0 145          \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 <\cb3\cf9 5\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0 146              \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 data1\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]!=\cb1\cf0 data2\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ])
\par \cb1\cf0\ul0\i0\b0 147                  \cb1\cf0 count\cb3\cf22 ++;
\par \cb1\cf0\ul0\i0\b0 148          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n\\n Hamming Distance = %d"\cb3\cf22 ,\cb1\cf0 count\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 149      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 150  
\par \cb1\cf0\ul0\i0\b0 151      \cb3\cf11\b void \b0\cb1\cf0 help\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 a\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0 152      \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 153          \cb3\cf11\b char \b0\cb1\cf0 s1\cb3\cf22 [\cb3\cf9 5\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0 154          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 " (Y/N): "\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 155          \cb1\cf0 gets\cb3\cf22 (\cb1\cf0 s1\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 156          \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 strcmp\cb3\cf22 (\cb1\cf0 s1\cb3\cf22 ,\cb3\cf17 "y"\cb3\cf22 )==\cb3\cf9 0\cb3\cf22 ||\cb1\cf0 strcmp\cb3\cf22 (\cb1\cf0 s1\cb3\cf22 ,\cb3\cf17 "Y"\cb3\cf22 )==\cb3\cf9 0\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0 157          \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 158              \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 a\cb3\cf22 ==\cb3\cf9 1\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0 159                  \cb1\cf0 system\cb3\cf22 (\cb3\cf17 "\\help_hamming_code.txt"\cb3\cf22 );\cb3\cf5 // to open a windows system file
\par \cb1\cf0\ul0\i0\b0 160              \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 a\cb3\cf22 ==\cb3\cf9 2\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0 161                  \cb1\cf0 system\cb3\cf22 (\cb3\cf17 "\\help_hamming_distance.txt"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 162          \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 163      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 164  \cb3\cf11\b void \b0\cb1\cf0 makeerror\cb3\cf22 (\cb3\cf11\b int \b0\cb1\cf0 trans\cb3\cf22 [], \cb3\cf11\b int \b0\cb1\cf0 m\cb3\cf22 , \cb3\cf11\b int \b0\cb1\cf0 r\cb3\cf22 )\{
\par \cb1\cf0\ul0\i0\b0 165      \cb3\cf11\b int \b0\cb1\cf0 i\cb3\cf22 ,\cb1\cf0 j\cb3\cf22 ,\cb1\cf0 k\cb3\cf22 ,\cb1\cf0 count\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 166   \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 <\cb1\cf0 r\cb3\cf22 ;\cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0 167   \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 168       \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 k\cb3\cf22 =\cb3\cf9 2\cb3\cf22 ;\cb1\cf0 k\cb3\cf22 <\cb1\cf0 m\cb3\cf22 +\cb1\cf0 r\cb3\cf22 ; \cb1\cf0 k\cb3\cf22 =\cb1\cf0 k\cb3\cf22 +\cb3\cf9 2\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0 169       \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0 170           \cb1\cf0 count\cb3\cf22 =\cb1\cf0 count\cb3\cf22 +\cb1\cf0 trans\cb3\cf22 [\cb1\cf0 k\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0 171       \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 172       \cb1\cf0 j\cb3\cf22 =(\cb1\cf0 pow\cb3\cf22 (\cb3\cf9 2\cb3\cf22 ,\cb1\cf0 i\cb3\cf22 )-\cb3\cf9 1\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0 173       \cb1\cf0 trans\cb3\cf22 [\cb1\cf0 j\cb3\cf22 ]= \cb1\cf0 count\cb3\cf22 %\cb3\cf9 2\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0 174   \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 175  \cb3\cf22 \}
\par }