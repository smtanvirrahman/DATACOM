{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;\red255\green255\blue255;\red200\green200\blue200;\red0\green0\blue0;\red160\green160\blue160;\red190\green190\blue230;\red128\green128\blue255;\red0\green128\blue128;\red128\green0\blue0;\red240\green0\blue240;\red240\green200\blue240;\red0\green0\blue160;\red135\green135\blue200;\red0\green160\blue0;\red154\green200\blue154;\red190\green0\blue190;\red190\green137\blue190;\red0\green0\blue255;\red190\green190\blue255;\red224\green160\blue0;\red224\green206\blue159;\red132\green160\blue132;\red255\green0\blue0;\red255\green200\blue200;\red128\green255\blue255;\red64\green64\blue128;\red133\green133\blue172;}
{\info{\comment Generated by the Code::Blocks RTF Exporter plugin}
{\title Untitled}}

\deflang1033\pard\plain\f0\fs16   1  \cb3\cf13 #include<stdio.h>
\par \cb1\cf0\ul0\i0\b0   2  \cb3\cf11\b void \b0\cb1\cf0 main\cb3\cf22 ()
\par \cb1\cf0\ul0\i0\b0   3  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0   4      \cb3\cf11\b char \b0\cb1\cf0 ch\cb3\cf22 ,\cb1\cf0 om\cb3\cf22 ,\cb1\cf0 z\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0   5      \cb3\cf11\b int \b0\cb1\cf0 p\cb3\cf22 ,\cb1\cf0 i\cb3\cf22 ,\cb1\cf0 noise\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0   6      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n\\n                                      PARITY CHECKING\\n\\n                "\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0   7      \cb3\cf11\b for\b0\cb3\cf22 (;;)
\par \cb1\cf0\ul0\i0\b0   8      \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0   9          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n Press any key to continue or Enter 'X' to Exit:\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  10          \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%c%c"\cb3\cf22 ,&\cb1\cf0 ch\cb3\cf22 ,&\cb1\cf0 om\cb3\cf22 ); \cb3\cf5 // double %c is to omit the null character input
\par \cb1\cf0\ul0\i0\b0  11          \cb3\cf5 //printf("ch= %c om= %c",ch,om);
\par \cb1\cf0\ul0\i0\b0  12  
\par \cb1\cf0\ul0\i0\b0  13            \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 ch\cb3\cf22 ==\cb3\cf19 'X'\cb3\cf22 ||\cb1\cf0 ch\cb3\cf22 ==\cb3\cf19 'x'\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  14          \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  15              \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "THANK YOU FOR TESTING THIS CODE\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  16              \cb3\cf11\b break\b0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  17          \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  18        \cb3\cf11\b else
\par \cb1\cf0\ul0\i0\b0  19          \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  20              \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nSENDER'S PART>>>\\n\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  21              \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "enter the parity type: (EVEN=1 | ODD=0): "\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  22              \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d"\cb3\cf22 ,&\cb1\cf0 p\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  23              \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "Enter data bits (5 bits word one by one):\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  24              \cb3\cf11\b int \b0\cb1\cf0 data\cb3\cf22 [\cb3\cf9 6\cb3\cf22 ];
\par \cb1\cf0\ul0\i0\b0  25              \cb3\cf11\b int \b0\cb1\cf0 count\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  26              \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 <\cb3\cf9 5\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0  27              \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  28                  \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d"\cb3\cf22 ,&\cb1\cf0 data\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]);
\par \cb1\cf0\ul0\i0\b0  29                  \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 data\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]==\cb3\cf9 1\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  30                      \cb1\cf0 count\cb3\cf22 ++;
\par \cb1\cf0\ul0\i0\b0  31              \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  32              \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 p\cb3\cf22 ==\cb3\cf9 1\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  33              \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  34                  \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n THIS WILL DO THE EVEN PARITY CHECK ! \\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  35                  \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 count\cb3\cf22 %\cb3\cf9 2\cb3\cf22 ==\cb3\cf9 0\cb3\cf22 )  \cb3\cf5 //inserting 0 for even number of set bits
\par \cb1\cf0\ul0\i0\b0  36                      \cb1\cf0 data\cb3\cf22 [\cb3\cf9 5\cb3\cf22 ]=\cb3\cf9 0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  37                  \cb3\cf11\b else if \b0\cb3\cf22 (\cb1\cf0 count\cb3\cf22 %\cb3\cf9 2\cb3\cf22 !=\cb3\cf9 0\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  38                      \cb1\cf0 data\cb3\cf22 [\cb3\cf9 5\cb3\cf22 ]=\cb3\cf9 1\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  39              \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  40              \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 p\cb3\cf22 ==\cb3\cf9 0\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  41              \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  42                  \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n THIS WILL DO THE ODD PARITY CHECK ! \\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  43                  \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 count\cb3\cf22 %\cb3\cf9 2\cb3\cf22 ==\cb3\cf9 0\cb3\cf22 )  \cb3\cf5 //inserting 1 for even number of set bits
\par \cb1\cf0\ul0\i0\b0  44                      \cb1\cf0 data\cb3\cf22 [\cb3\cf9 5\cb3\cf22 ]=\cb3\cf9 1\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  45                  \cb3\cf11\b else if \b0\cb3\cf22 (\cb1\cf0 count\cb3\cf22 %\cb3\cf9 2\cb3\cf22 !=\cb3\cf9 0\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  46                      \cb1\cf0 data\cb3\cf22 [\cb3\cf9 5\cb3\cf22 ]=\cb3\cf9 0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  47              \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  48              \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n the data with parity bit is: \\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  49              \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 <\cb3\cf9 6\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0  50              \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  51                  \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "%d "\cb3\cf22 ,\cb1\cf0 data\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]);
\par \cb1\cf0\ul0\i0\b0  52              \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  53  
\par \cb1\cf0\ul0\i0\b0  54              \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nDO YOU WANT TO ENTER NOISE IN THE DATA?? (1 for YES /0 for NO)\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  55              \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d"\cb3\cf22 ,&\cb1\cf0 noise\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  56              \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 noise\cb3\cf22 ==\cb3\cf9 1\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  57              \cb3\cf22 \{ \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n Enter the raw data as noise: \\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  58                  \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 <\cb3\cf9 5\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0  59                  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  60                      \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%d"\cb3\cf22 ,&\cb1\cf0 data\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]);
\par \cb1\cf0\ul0\i0\b0  61                  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  62              \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  63              \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 noise\cb3\cf22 ==\cb3\cf9 0\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  64              \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  65  
\par \cb1\cf0\ul0\i0\b0  66              \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  67  
\par \cb1\cf0\ul0\i0\b0  68              \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\nRECIEVER'S PART\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  69              \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  70                  \cb1\cf0 count\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ;
\par \cb1\cf0\ul0\i0\b0  71                  \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 p\cb3\cf22 ==\cb3\cf9 1\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  72                  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  73                      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n Even parity checking:\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  74                      \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 <\cb3\cf9 6\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0  75                      \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  76                          \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 data\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]==\cb3\cf9 1\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  77                              \cb1\cf0 count\cb3\cf22 ++;
\par \cb1\cf0\ul0\i0\b0  78                      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  79                      \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 count\cb3\cf22 %\cb3\cf9 2\cb3\cf22 ==\cb3\cf9 0\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  80                          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n There is no error in the received data :) \\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  81                      \cb3\cf11\b else if\b0\cb3\cf22 (\cb1\cf0 count\cb3\cf22 %\cb3\cf9 2\cb3\cf22 !=\cb3\cf9 0\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  82                          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n THERE is ERROR IN THE RECEIVED DATA :( \\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  83                  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  84                  \cb3\cf11\b if\b0\cb3\cf22 (\cb1\cf0 p\cb3\cf22 ==\cb3\cf9 0\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  85                  \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  86                      \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n ODD parity checking:\\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  87                      \cb3\cf11\b for\b0\cb3\cf22 (\cb1\cf0 i\cb3\cf22 =\cb3\cf9 0\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 <\cb3\cf9 6\cb3\cf22 ; \cb1\cf0 i\cb3\cf22 ++)
\par \cb1\cf0\ul0\i0\b0  88                      \cb3\cf22 \{
\par \cb1\cf0\ul0\i0\b0  89                          \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 data\cb3\cf22 [\cb1\cf0 i\cb3\cf22 ]==\cb3\cf9 1\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  90                              \cb1\cf0 count\cb3\cf22 ++;
\par \cb1\cf0\ul0\i0\b0  91                      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  92                      \cb3\cf11\b if \b0\cb3\cf22 (\cb1\cf0 count\cb3\cf22 %\cb3\cf9 2\cb3\cf22 !=\cb3\cf9 0\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  93                          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n There is no error in the received data :) \\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  94                      \cb3\cf11\b else if\b0\cb3\cf22 (\cb1\cf0 count\cb3\cf22 %\cb3\cf9 2\cb3\cf22 ==\cb3\cf9 0\cb3\cf22 )
\par \cb1\cf0\ul0\i0\b0  95                          \cb1\cf0 printf\cb3\cf22 (\cb3\cf17 "\\n THERE is ERROR IN THE RECEIVED DATA :( \\n"\cb3\cf22 );
\par \cb1\cf0\ul0\i0\b0  96                  \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  97              \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0  98  
\par \cb1\cf0\ul0\i0\b0  99          \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 100  \cb1\cf0 scanf\cb3\cf22 (\cb3\cf17 "%c"\cb3\cf22 ,&\cb1\cf0 z\cb3\cf22 );\cb3\cf5 // to omit the noise in loop control
\par \cb1\cf0\ul0\i0\b0 101      \cb3\cf22 \}
\par \cb1\cf0\ul0\i0\b0 102  \cb3\cf22 \}
\par }